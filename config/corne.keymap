/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>

#define HOST_OS 2

#include "helper.h"
#include "./keypos_def/keypos_36keys.h"
#include "./international_chars/swedish.dtsi"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <400>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <16 19>;
        };
    };

    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ———————————————————————————————————   —————————————————————————————————
            // | TAB   | q | w |  e  |  r  |  t  |   |  y  |  u  |  i  | o | p |  å  |
            // | LCTRL | a | s |  d  |  f  |  g  |   |  h  |  j  |  k  | l | ö |  ä  |
            // | SHFT  | z | x |  c  |  v  |  b  |   |  n  |  m  |  ,  | . | - | BKS |
            //                 | GUI | ENT | LWR |   | RSE | SPC | ALT |
            //                 ———————————————————   ———————————————————

            label = "Base";
            bindings = <
&kp TAB                &kp Q  &kp W  &kp E     &kp R    &kp T    &kp Y  &kp U      &kp I      &kp O    &kp P          &kp LEFT_BRACKET
&kp LCTRL              &kp A  &kp S  &kp D     &kp F    &kp G    &kp H  &kp J      &kp K      &kp L    &kp SEMICOLON  &kp SQT
&bhm LEFT_SHIFT GRAVE  &kp Z  &kp X  &kp C     &kp V    &kp B    &kp N  &kp M      &kp COMMA  &kp DOT  &kp SLASH      &kp BACKSPACE
                                     &kp LGUI  &kp RET  &mo 1    &mo 2  &kp SPACE  &kp RALT
            >;
        };

        lower_layer {
            // —————————————————————————————————   ———————————————————————————————
            // | BTC |  /  | 7 | 8 |  9  |  *  |   | HME |     | PUP |   |   |   |
            // | BT1 |  =  | 4 | 5 |  6  |  -  |   |  ⬅  |  ⬇  |  ⬆  | ➡ |   |   |
            // | BT2 | DOT | 1 | 2 |  3  |  +  |   |     | PDN |     |   |   |   |
            //                 | 0 | ENT | LWR |   | RSE | SPC | ALT |
            //                 —————————————————   ———————————————————

            label = "Lower";
            bindings = <
&bt BT_CLR    &kp AMPERSAND          &kp N7  &kp N8  &kp N9   &kp RS(BACKSLASH)    &kp HOME  &trans         &kp PAGE_UP  &kp END    &trans  &trans
&bt BT_SEL 0  &kp RIGHT_PARENTHESIS  &kp N4  &kp N5  &kp N6   &kp SLASH            &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans  &trans
&bt BT_SEL 1  &trans                 &kp N1  &kp N2  &kp N3   &kp MINUS            &trans    &kp PAGE_DOWN  &trans       &trans     &trans  &trans
                                             &kp N0  &kp RET  &trans               &trans    &kp SPACE      &kp RALT
            >;
        };

        raise_layer {
            //()=?
            // —————————————————————————————————   ———————————————————————————————
            // |  §  | ! | " |  #  |  $  |  %  |   |  &  |  |  |  [  | ] | = | ? |
            // | ESC |   |   |     |     |     |   |  +  |  /  |  (  | ) | ; |   |
            // | SFT |   |   |     |     |     |   |  _  |  \  |  {  | } | : |   |
            //               | GUI | ENT | LWR |   | RSE | SPC | ALT |
            //               ———————————————————   ———————————————————

            label = "Raise";
            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp LA(N4)  &kp PERCENT    &kp RS(N6)    &kp LA(N7)      &kp LA(N8)      &kp LA(N9)            &kp RIGHT_PARENTHESIS  &kp RS(MINUS)
&kp ESC    &trans           &trans       &trans    &trans      &trans         &kp MINUS     &kp AMPERSAND   &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp LS(COMMA)         &trans
&kp LSHFT  &trans           &trans       &trans    &trans      &trans         &kp QUESTION  &kp LA(LS(N7))  &kp LA(LS(N8))  &kp LA(LS(N9))        &kp LS(DOT)            &trans
                                         &kp LGUI  &kp RET     &trans         &trans        &kp SPACE       &kp RALT
            >;
        };
    };
};
